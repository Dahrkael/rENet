=================================================
 rENet
 Ruby library for games networking by Dahrkael and Job Vranish
=================================================
 Under MIT license
------------------------------------------------
 Uses ENet as backend < http://enet.bespin.org/ >
=================================================

 Planned:
 - ENet::Connection (client)
 - ENet::Server     (server)
 - Others
 
 Finished:
 - ENet::Connection
 - ENet::Server

Library overview
-------------------------------------------------
module ENet
	|- ENET_VERSION (string)
	|- RENET_VERSION (string)
	|
	|- Connection (class)
	|	|- attr_reader
	|	|	|- online?
	|	|	|- connected?
	|	|
	|	|- attr_accessor
	|	|	|- total_sent_data
	|	|	|- total_received_data
	|	|	|- total_sent_packets
	|	|	|- total_received_packets
	|	|
	|	|- methods
	|		|- initialize (remote host, remote port, channels to allocate, download bw, upload bw)
	|		|- connect (timeout in ms)
	|		|- disconnect (timeout in ms)
	|		|- send_packet (data to send, reliable or not, channel id)
	|		|- send_queued_packets (nothing)
	|		|- flush (nothing)
	|		|- update (timeout in ms)
	|		|- use_compression (true or false)
	|		|- on_connection (method to call)
	|		|- on_packet_receive (method to call)
	|		|- on_disconnection (method to call)
	|
	|- Server (class)
		|- attr_reader
		|	|- max_clients
		|	|- clients_count
		|
		|- attr_accessor
		|	|- total_sent_data
		|	|- total_received_data
		|	|- total_sent_packets
		|	|- total_received_packets
		|
		|- methods
			|- initialize (local port, nº of allowed clients, channels to allocate, download bw, upload bw)
			|- disconnect_client (client id)
			|- send_packet (client id, data to send, reliable or not, channel id)
			|- broadcast_packet (data to send, reliable or not, channel id)
			|- send_queued_packets (nothing)
			|- flush (nothing)
			|- update (timeout in ms)
			|- use_compression (true or false)
			|- on_connection (method to call)
			|- on_packet_receive (method to call)
			|- on_disconnection (method to call)